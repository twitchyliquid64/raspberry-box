load('pi.lib', "pi")
load('unix.lib', 'users')

# fallback_img is called if no --img is provided to compute
# the value.
def fallback_img():
    if not fs.exists("pi.img"):
        crash("cannot find pi.img, and no --img image specified.")
    return "pi.img"

# setup is called before build().
def setup(img):
    image = pi.load_img(img)
    return struct(image=image)

# build is called to actually build the image.
# The return value of setup() is passed to build().
def build(setup):
    print("Hostname: %s" % setup.image.ext4.cat("/etc/hostname").strip())
    print("Kernel command-line: %s" % setup.image.fat.cat("/cmdline.txt").strip())
    print("User information: %s" % str(users(setup.image.ext4)))
